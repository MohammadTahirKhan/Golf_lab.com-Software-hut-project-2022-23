%div#whole_profile
    %div#profile-user-form
        %h2#header Edit #{resource_name.to_s.humanize}
        = form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
            = devise_error_messages!
            .field
                = f.label :email
                %br/
                = f.email_field :email, autofocus: true
            - if devise_mapping.confirmable? && resource.pending_reconfirmation?
                %div
                    Currently waiting confirmation for: #{resource.unconfirmed_email}
            .field
                = f.label :password
                %i (leave blank if you don't want to change it)
                %br/
                = f.password_field :password, autocomplete: "off"
                - if @minimum_password_length
                    %br/
                    %em
                        = @minimum_password_length
                        characters minimum
            .field
                = f.label :password_confirmation
                %br/
                = f.password_field :password_confirmation, autocomplete: "off"
            .field
                = f.label :current_password
                %i (we need your current password to confirm your changes)
                %br/
                = f.password_field :current_password, autocomplete: "off"
            .actions
                = f.submit "Update" , class: "btn btn-primary form-btn"
            = link_to "Back", :back, id: "back"

    %div#profile-user-form
        %h3#header Delete my account
        -if resource.user_role == "admin"
            %p
                You are an admin, you cannot delete your account.
            
        - elsif resource.user_role == "map_creator"
            %p
                You are a map creator, you cannot delete your account.
            
        - else
            -# - delete user holes 
            Unhappy? #{button_to "Delete my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete, class: "btn btn-primary form-btn"}
            - user_holes = UserHole.where(user_id: resource.id)
            - user_holes.each do |user_hole|
                - user_hole.destroy
                
            
        = link_to "Back", :back , id: "back"
    