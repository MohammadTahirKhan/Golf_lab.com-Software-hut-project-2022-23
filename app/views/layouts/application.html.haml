!!!
%html{ lang: 'en-GB' }
  %head
    %title Project

    %meta{ :'http-equiv' => "content-type", content: "text/html; charset=utf-8" }
    %meta{ :'http-equiv' => 'X-UA-Compatible', content: 'IE=edge' }
    %meta{ name: "viewport", content: "width=device-width, initial-scale=1.0, shrink-to-fit=no" }

    - if content_for(:description)
      %meta{ content: content_for(:description), name: 'description' }

    %title= ["Project", content_for(:title)].compact.join(' - ')

    = csrf_meta_tags
    = csp_meta_tag

    = stylesheet_pack_tag 'styles', media: 'all'
    = javascript_pack_tag 'application'

  %body
    - unless action_name == "new" || action_name == "create"
      %header.navbar.navbar-expand-lg.bg-light.mb-3
        .container-fluid
          = link_to '#', class: 'navbar-brand' do
            = image_pack_tag 'logo.png', height: 40
          %button.navbar-toggler{ type: :button, data: { bs_toggle: :collapse, bs_target: '#navbar-content' }, aria: { controls: 'navbar-content', expanded: 'false', label: 'Toggle navigation' } }
            %span.navbar-toggler-icon
          #navbar-content.navbar-collapse.collapse
            %nav.navbar-nav
              = link_to '/', class: 'active nav-link' do
                %i.bi-house-fill
                Home
              = link_to '/holes', class: 'active nav-link' do
                -# %i.bi-house-fill
                Holes Page
            %nav.navbar-nav.ms-auto
              .nav-item.dropdown
                - if user_signed_in?
                  = link_to current_user.email, '#', class: 'nav-link dropdown-toggle', role: 'button', data: { bs_toggle: 'dropdown' }, aria: { expanded: 'false' }
                  %nav.dropdown-menu.dropdown-menu-md-end
                    = link_to 'Log out', destroy_user_session_path, class: 'dropdown-item', method: :delete
                    = link_to 'Profile', profile_path, class: 'dropdown-item'
                - else
                  = link_to 'Log in', new_user_session_path, class: 'nav-link'
            

    -# - if flash.present?
    -#   .container-fluid.flash-messages
    -#     - flash.each do |message_type, message|
    -#       - next unless message_type == 'alert' || message_type == 'notice'
    -#       .alert{ class: "alert-#{ message_type == 'notice' ? 'success' : 'danger' }" }= message

    %main
      .container-fluid
        = yield

    %footer
      .container-fluid
        .d-flex.p-3
          Footer text